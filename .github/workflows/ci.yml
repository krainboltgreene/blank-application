name: Elixir CI

on:
  push:
    branches: [ core ]
  pull_request:
    branches: [ core ]

jobs:
  javascript-setup:
    name: Javascript Setup
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v1
      with:
        node-version: '15.x'
    - name: Restore npm cache
      uses: actions/cache@v2
      with:
        path: node_modules
        key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
        restore-keys: ${{ runner.os }}-npm-
    - run: npm ci
  elixir-setup:
    name: Elixir Setup
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: erlef/setup-beam@v1
      with:
        elixir-version: '1.11.4'
        otp-version: '23.3'
    - name: Restore mix cache
      uses: actions/cache@v2
      with:
        path: deps
        key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
        restore-keys: ${{ runner.os }}-mix-
    - run: bin/elixir-setup
  javascript-build:
    name: Javascript Build
    needs: ["javascript-setup"]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v1
      with:
        node-version: '15.x'
    - name: Restore npm cache
      uses: actions/cache@v2
      with:
        path: node_modules
        key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
        restore-keys: ${{ runner.os }}-npm-
    - name: Restore browser-client build cache
      uses: actions/cache@v2
      with:
        path: tmp/browser-client
        key: ${{ runner.os }}-javascript-build
    - run: bin/webpack-build
  elixir-build:
    name: Elixir Build
    needs: ["elixir-setup"]
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13.2
        ports: ['5432:5432']
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
    - uses: actions/checkout@v2
    - uses: erlef/setup-beam@v1
      with:
        elixir-version: '1.11.4'
        otp-version: '23.3'
    - name: Restore mix cache
      uses: actions/cache@v2
      with:
        path: deps
        key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
        restore-keys: ${{ runner.os }}-mix-
    - name: Restore elixir build cache
      uses: actions/cache@v2
      with:
        path: _build
        key: ${{ runner.os }}-elixir-build
    - name: Restore graphql cache
      uses: actions/cache@v2
      with:
        path: |
          schema.graphql
          schema.json
        key: ${{ runner.os }}-graphql
    - run: bin/database-setup
    - run: bin/elixir-build
  elixir-check:
    name: Elixir Checks
    needs: ["elixir-build"]
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13.2
        ports: ['5432:5432']
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
    - uses: actions/checkout@v2
    - uses: erlef/setup-beam@v1
      with:
        elixir-version: '1.11.4'
        otp-version: '23.3'
    - name: Restore mix cache
      uses: actions/cache@v2
      with:
        path: deps
        key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
        restore-keys: ${{ runner.os }}-mix-
    - name: Restore elixir build cache
      uses: actions/cache@v2
      with:
        path: _build
        key: ${{ runner.os }}-elixir-build
    - run: bin/database-setup
    - run: bin/esunit-check
  javascript-check:
    name: Javascript Checks
    needs: ["elixir-build", "javascript-setup"]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v1
      with:
        node-version: '15.x'
    - name: Restore npm cache
      uses: actions/cache@v2
      with:
        path: node_modules
        key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
        restore-keys: ${{ runner.os }}-npm-
    - name: Restore browser-client build cache
      uses: actions/cache@v2
      with:
        path: tmp/browser-client
        key: ${{ runner.os }}-javascript-build
    - name: Restore graphql cache
      uses: actions/cache@v2
      with:
        path: |
          schema.graphql
          schema.json
        key: ${{ runner.os }}-graphql
    - run: bin/eslint-check
    - run: bin/typescript-check
